apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
    name: zitadel-config
spec:
    refreshInterval: 300s # Refresh every 5 minutes
    secretStoreRef:
        name: vault-backend
        kind: ClusterSecretStore
    target:
        template:
            engineVersion: v2
            data:
                config.yaml: |
                    FirstInstance:
                        Org:
                        Human:
                            Username: "admin"
                            Password: "SecureP@ssw0rd!"
                            FirstName: "Default"
                            LastName: "Admin"
                            Email:
                            Address: "cloudfleet@5ha.re"
                            Verified: true
                    Log:
                        Level: debug
                        Formatter:
                            Format: text

                    Database:
                        postgres:
                            Host: "{{`{{ .postgres_host }}`}}"
                            Port: "{{`{{ .postgres_port }}`}}"
                            Database: "{{`{{ .postgres_dbname }}`}}"
                            User:
                                Username: "{{`{{ .postgres_user }}`}}"
                                Password: "{{`{{ .postgres_password }}`}}"
                                SSL:
                                    Mode: disable
                            Admin:
                                ExistingDatabase: zitadel
                                Username: "{{`{{ .postgres_user }}`}}"
                                Password: "{{`{{ .postgres_password }}`}}"
                                SSL:
                                    Mode: disable

                    Machine:
                        Identification:
                            Hostname: "zitadel.cloudfleet.platform.5ha.re"

                    ExternalSecure: true
                    ExternalDomain: "zitadel.cloudfleet.platform.5ha.re"
                    ExternalPort: 443
                    TLS:
                        Enabled: false  # TLS termination at ingress level

                    DefaultInstance:
                        DomainPolicy:
                            LoginPolicy:
                                AllowUsernamePassword: true
                                AllowRegister: true
                                AllowExternalIDP: false
                            SMTPConfiguration:
                                SMTP:
                                    Host: "{{`{{ .smtp_host }}`}}"
                                    User: "{{`{{ .smtp_username }}`}}"
                                    Password: "{{`{{ .smtp_password }}`}}"
                                From: "cloudfleet@5ha.re"
                                FromName: "Cloudfleet Platform"
    data:
      - secretKey: postgres_host
        remoteRef:
            key: my-cute-postgres-cluster-pguser-zitadel
            property: host
        sourceRef:
            storeRef:
                name: k8s-services
                kind: ClusterSecretStore
      - secretKey: postgres_port
        remoteRef:
            key: my-cute-postgres-cluster-pguser-zitadel
            property: port
        sourceRef:
            storeRef:
                name: k8s-services
                kind: ClusterSecretStore
      - secretKey: postgres_dbname
        remoteRef:
            key: my-cute-postgres-cluster-pguser-zitadel
            property: dbname
        sourceRef:
            storeRef:
                name: k8s-services
                kind: ClusterSecretStore
      - secretKey: postgres_user
        remoteRef:
            key: my-cute-postgres-cluster-pguser-zitadel
            property: user
        sourceRef:
            storeRef:
                name: k8s-services
                kind: ClusterSecretStore
      - secretKey: postgres_password
        remoteRef:
            key: my-cute-postgres-cluster-pguser-zitadel
            property: password
        sourceRef:
            storeRef:
                name: k8s-services
                kind: ClusterSecretStore
      - secretKey: smtp_host
        remoteRef:
            key: platform/smtp-credentials
            property: host
      - secretKey: smtp_username
        remoteRef:
            key: platform/smtp-credentials
            property: username
      - secretKey: smtp_password
        remoteRef:
            key: platform/smtp-credentials
            property: password
