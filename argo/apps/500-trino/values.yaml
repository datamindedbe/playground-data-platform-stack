# Custom values for the Trino Helm chart
# Values placed under the 'trino:' key will be passed to the subchart.
trino:
  additionalConfigProperties: []
  envFrom:
    - secretRef:
        name: s3-credentials
      prefix: S3_
    - secretRef:
        name: pg-credentials
      prefix: PG_
    - secretRef:
        name: trino-oidc
      prefix: OAUTH2_
  server:
    config:
      authenticationType: OAUTH2
  catalogs:
    iceberg: |
      connector.name=iceberg
      iceberg.catalog.type=jdbc
      iceberg.jdbc-catalog.catalog-name=catalog
      iceberg.jdbc-catalog.driver-class=org.postgresql.Driver
      iceberg.jdbc-catalog.connection-url=jdbc:postgresql://${ENV:PG_HOST}:${ENV:PG_PORT}/catalog
      iceberg.jdbc-catalog.connection-user=${ENV:PG_USERNAME}
      iceberg.jdbc-catalog.connection-password=${ENV:PG_PASSWORD}
      iceberg.jdbc-catalog.default-warehouse-dir=s3://dp-stack-tf-os
      fs.native-s3.enabled=true
      s3.endpoint=${ENV:S3_ENDPOINT}
      s3.region=${ENV:S3_REGION}
      s3.aws-access-key=${ENV:S3_ACCESS_KEY_ID}
      s3.aws-secret-key=${ENV:S3_SECRET_ACCESS_KEY}

  coordinator:
    additionalConfigFiles:
      config.properties: |
        internal-communication.shared-secret=123456
        http-server.authentication.type=oauth2
        http-server.authentication.oauth2.oidc.discovery=true
        http-server.authentication.oauth2.issuer=zitadel.services.svc.cluster.local:8080
        http-server.authentication.oauth2.client-id=${ENV:OAUTH2_CLIENT_ID}
        http-server.authentication.oauth2.client-secret=${ENV:OAUTH2_CLIENT_SECRET}
